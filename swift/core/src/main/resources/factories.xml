<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans-2.0.xsd
       http://www.springframework.org/schema/context classpath:org/springframework/context/config/spring-context-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
    default-lazy-init="true" default-autowire="no">

    <context:component-scan base-package="edu.mayo.mprc" />

    <bean id="defaultPropertyConfigurator"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:swift.properties</value>
            </list>
        </property>

        <!--<property name="ignoreResourceNotFound" value="true"/>-->
        <property name="ignoreUnresolvablePlaceholders" value="true" />
    </bean>

    <bean id="simpleDaemonRunnerFactory" class="edu.mayo.mprc.daemon.SimpleRunner$Factory">
        <property name="table" ref="resourceTable" />
    </bean>

    <bean id="mascotDeployerWorkerFactory" class="edu.mayo.mprc.mascot.MascotDeploymentService$Factory">
        <property name="mascotDatabaseMaintenanceUriPostfix" value="x-cgi/db_gui.pl" />
        <property name="deploymentEnabled" value="true" />
        <property name="engineVersion" value="2.2" />
        <property name="datParameters" value="AA 1234 32 1 1 1 0 0 12 13 0 0" />
        <property name="repLine"
            value="%shortname%_REP%tab%&quot;24&quot;%tab%&quot;localhost&quot;%tab%&quot;80&quot;%tab%&quot;MASCOT-INSTALLATION-ROOT/x-cgi/ms-getseq.exe %shortname% #ACCESSION# all&quot;" />
        <property name="seqLine"
            value="%shortname%_SEQ%tab%&quot;8&quot;%tab%&quot;localhost&quot;%tab%&quot;80&quot;%tab%&quot;MASCOT-INSTALLATION-ROOT/x-cgi/ms-getseq.exe %shortname% #ACCESSION# seq&quot;" />
    </bean>


    <bean id="aminoAcidSet" class="edu.mayo.mprc.chem.AminoAcidSet"></bean>

    <bean id="resourceTable" class="edu.mayo.mprc.swift.resources.ResourceTable"></bean>

    <!-- Provides a WebUi interface after it gets configured -->
    <bean id="webUiHolder" class="edu.mayo.mprc.swift.resources.WebUiHolder">
        <property name="context" ref="swiftEnvironment" />
    </bean>

    <bean id="curationContext" class="edu.mayo.mprc.dbcurator.model.CurationContext"></bean>

    <bean id="webUiFactory" class="edu.mayo.mprc.swift.resources.WebUi$Factory" autowire="byType">
        <property name="fileTokenFactory" ref="fileTokenFactory" />
        <property name="searchEngineFactory" ref="searchEngineFactory" />
        <property name="curationContext" ref="curationContext" />
    </bean>

    <!-- Hibernate properties -->
    <bean id="hibernateProperties" class="java.util.HashMap">
        <constructor-arg type="java.util.Map">
            <map>
                <entry key="hibernate.show_sql" value="${hibernate.show_sql}" />

                <entry key="hibernate.current_session_context_class"
                    value="${hibernate.current_session_context_class}" />
                <entry key="hibernate.transaction.factory_class" value="${hibernate.transaction.factory_class}" />
                <entry key="hibernate.cache.provider_class" value="${hibernate.cache.provider_class}" />
                <entry key="hibernate.jdbc.batch_size" value="0" />
                <entry key="hibernate.c3p0.min_size" value="5" />
                <entry key="hibernate.c3p0.max_size" value="20" />
                <entry key="hibernate.c3p0.timeout" value="6000" />
                <entry key="hibernate.c3p0.max_statements" value="0" />
                <entry key="hibernate.c3p0.max_statements_per_connection" value="20" />
                <entry key="hibernate.c3p0.idle_connection_test_period" value="300" />
                <entry key="hibernate.connection.provider_class"
                    value="org.hibernate.connection.C3P0ConnectionProvider" />
                <entry key="hibernate.flushmode" value="always"/> <!-- Always flush -->
            </map>
        </constructor-arg>
    </bean>

    <!-- Hibernate properties when creating a new database -->
    <bean id="hibernateCreationProperties" class="java.util.HashMap">
        <constructor-arg type="java.util.Map">
            <map>
                <entry key="hibernate.show_sql" value="${hibernate.show_sql}" />

                <entry key="hibernate.current_session_context_class"
                    value="${hibernate.current_session_context_class}" />
                <entry key="hibernate.transaction.factory_class" value="${hibernate.transaction.factory_class}" />
                <entry key="hibernate.cache.provider_class" value="${hibernate.cache.provider_class}" />
                <entry key="hibernate.jdbc.batch_size" value="0" />
            </map>
        </constructor-arg>
    </bean>

    <!-- Hibernate mapping resources -->

    <bean id="paramsInfo" class="edu.mayo.mprc.swift.params2.mapping.ParamsInfoImpl">
        <constructor-arg index="0" ref="curationDao" />
        <constructor-arg index="1" ref="unimodDao" />
        <constructor-arg index="2" ref="paramsDao" />
    </bean>

    <!-- SGE -->
    <bean id="gridEngineJobManager" class="edu.mayo.mprc.sge.GridEngineJobManagerImpl" scope="singleton"
        lazy-init="true"></bean>

    <bean id="gridScriptFactory" class="edu.mayo.mprc.sge.GridScriptFactory">
        <property name="javaCommand" value="java" />
        <property name="swiftLibDirectory" value="lib" />
    </bean>

    <bean id="daemonConnectionFactory" class="edu.mayo.mprc.daemon.DaemonConnectionFactory">
        <property name="fileTokenFactory" ref="fileTokenFactory" />
        <property name="serviceFactory" ref="serviceFactory" />
    </bean>

    <bean id="serviceFactory" class="edu.mayo.mprc.messaging.ServiceFactoryImpl">
        <property name="connectionPool" ref="connectionPool" />
        <property name="context" ref="swiftEnvironment" />
    </bean>

    <bean id="messageBrokerFactory" class="edu.mayo.mprc.daemon.MessageBroker$Factory" />

    <bean id="searcherRuntimeInitializers" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <ref bean="workspaceDao" />
                <ref bean="paramsDao" />
                <ref bean="unimodDao" />
                <ref bean="curationDao" />
                <ref bean="swiftDao" />
                <ref bean="searchDbDao" />
            </list>
        </constructor-arg>
    </bean>

    <bean id="swiftMonitor" class="edu.mayo.mprc.swift.resources.SwiftMonitor">
        <property name="factory" ref="resourceTable" />
        <property name="context" ref="swiftEnvironment" />
    </bean>

    <bean id="connectionPool" class="edu.mayo.mprc.messaging.ActiveMQConnectionPool" />
</beans>
