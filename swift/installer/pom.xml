<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>swift-installer</artifactId>
    <packaging>pom</packaging>
    <version>3.8-SNAPSHOT</version>
    <name>Swift</name>
    <description>Generates Swift's installer artifacts ready for distribution</description>
    <url>http://github.com/romanzenka/swift</url>
    <inceptionYear>2007</inceptionYear>

    <parent>
        <groupId>edu.mayo.mprc</groupId>
        <artifactId>swift</artifactId>
        <version>3.8-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <properties>
        <gwtVersion>2.4.0</gwtVersion>
    </properties>

    <dependencies>
        <dependency>
            <groupId>edu.mayo.mprc</groupId>
            <artifactId>swift-core</artifactId>
            <version>3.8-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>edu.mayo.mprc</groupId>
            <artifactId>launcher</artifactId>
            <version>3.8-SNAPSHOT</version>
        </dependency>
        <!-- This dependency does not seem to be getting picked by appassembler -->
        <dependency>
            <groupId>edu.mayo.mprc</groupId>
            <artifactId>swift-web</artifactId>
            <type>war</type>
            <version>3.8-SNAPSHOT</version>
        </dependency>
        <!-- The .war file will not list transitive dependencies, and our .war is 'skinny'. -->
        <!-- Take the dependencies from the .war by linking to the swift-web as a pom artifact -->
        <!-- This is probably not honored by the appassembler plugin -->
        <dependency>
            <groupId>edu.mayo.mprc</groupId>
            <artifactId>swift-web</artifactId>
            <type>pom</type>
            <version>3.8-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>edu.mayo.mprc</groupId>
            <artifactId>db-curator-ui</artifactId>
            <version>3.8-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>edu.mayo.mprc.swift</groupId>
            <artifactId>swift-config-ui</artifactId>
            <version>3.8-SNAPSHOT</version>
        </dependency>

        <!-- mzml is a pure plugin, specifically ask for it otherwise it does not get included -->
        <dependency>
            <groupId>edu.mayo.mprc</groupId>
            <artifactId>mzml</artifactId>
            <version>3.8-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>edu.mayo.mprc</groupId>
            <artifactId>swift-scripts</artifactId>
            <version>3.8-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>edu.mayo.mprc</groupId>
            <artifactId>install</artifactId>
            <version>3.6</version>
        </dependency>
        <dependency>
            <groupId>edu.mayo.mprc</groupId>
            <artifactId>install-exe</artifactId>
            <version>3.6</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>appassembler-maven-plugin</artifactId>
                <version>1.9</version>
                <configuration>
                    <includeConfigurationDirectoryInClasspath>false</includeConfigurationDirectoryInClasspath>
                    <!-- We do not generate repository as we use a shaded jar generated by shade plugin -->
                    <generateRepository>false</generateRepository>
                    <configurationDirectory>conf</configurationDirectory>

                    <daemons>
                        <daemon>
                            <id>swift</id>
                            <mainClass>edu.mayo.mprc.swift.Swift</mainClass>
                            <commandLineArguments>
                                <commandLineArgument>--run</commandLineArgument>
                                <commandLineArgument>run-swift</commandLineArgument>
                            </commandLineArguments>
                            <platforms>
                                <platform>jsw</platform>
                            </platforms>
                            <generatorConfigurations>
                                <generatorConfiguration>
                                    <generator>jsw</generator>
                                    <includes>
                                        <include>linux-x86-32</include>
                                        <include>linux-x86-64</include>
                                        <include>windows-x86-32</include>
                                        <include>windows-x86-64</include>
                                    </includes>
                                    <configuration>
                                        <!-- TODO: This does not work with the 3.2.3 version of the wrapper -->
                                        <property>
                                            <name>wrapper.logfile</name>
                                            <value>var/log/wrapper-%WRAPPER_HOSTNAME%.log</value>
                                        </property>
                                        <!-- Nice title -->
                                        <property>
                                            <name>wrapper.console.title</name>
                                            <value>Swift</value>
                                        </property>
                                        <property>
                                            <name>wrapper.ntservice.displayname</name>
                                            <value>Swift</value>
                                        </property>
                                        <property>
                                            <name>wrapper.ntservice.description</name>
                                            <value>Proteomics workflow daemon running multiple services</value>
                                        </property>
                                        <property>
                                            <name>wrapper.pidfile</name>
                                            <value>../var</value>
                                        </property>
                                        <!-- We will append to the java.library.path -->
                                        <property>
                                            <name>wrapper.java.library.path.append_system_path</name>
                                            <value>true</value>
                                        </property>
                                        <!-- DRMAA location on our system -->
                                        <property>
                                            <name>wrapper.java.library.path.2</name>
                                            <value>/usr/lib64</value>
                                        </property>
                                        <!-- When exiting with exit code 2, restart -->
                                        <property>
                                            <name>wrapper.on_exit.2</name>
                                            <value>RESTART</value>
                                        </property>
                                        <!-- On Linux, we want all members of our group to access data we produce -->
                                        <property>
                                            <name>wrapper.umask</name>
                                            <value>002</value>
                                        </property>
                                        <!-- Sun Grid Engine Root needs to be set for DRMAA to work -->
                                        <property>
                                            <name>set.SGE_ROOT</name>
                                            <value>/usr/share/gridengine</value>
                                        </property>
                                    </configuration>
                                </generatorConfiguration>
                            </generatorConfigurations>
                        </daemon>
                    </daemons>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-jsw-scripts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>generate-daemons</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <id>shade</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <outputFile>${project.build.directory}/swift-${project.version}.jar</outputFile>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>assemble-swift</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>swift-${project.version}</finalName>
                            <descriptors>
                                <descriptor>assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>mayo-nexus-public</id>
            <url>http://informatics.mayo.edu/maven/content/repositories/releases/</url>
            <name>Public Mayo Nexus with Mayo-specific releases</name>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>mayo-nexus-public-snapshots</id>
            <url>http://informatics.mayo.edu/maven/content/repositories/snapshots/</url>
            <name>Public Mayo Nexus with Mayo-specific snapshots</name>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>
